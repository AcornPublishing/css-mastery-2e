<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Liquid Images</title><style type="text/css"><!--/* Pretty Stuff================================== *//* Zero down margin and paddin on all elements */body {  font: 62.5%/1.6 "Lucida Grande", "Lucida Sans", "Lucida Sans Unicode", Verdana, sans-serif;  background-color: #ccc;  margin: 0;  padding: 0;}#wrapper {   width: 65%;   margin: 0 auto;   text-align: left;     background-color: #fff;  padding: 20px;} h1 {  font-size: 2.4em;  font-weight: normal;}h2 {  font-size: 2.0em;  font-weight: normal;}p {  font-size: 1.4em;}.clear {  clear: both;}.news {  background-color:#eaeaea;  border: solid 1px #999;}/* The Core Technique================================= */#branding1 {  height: 171px;  background: url(images/branding.png) no-repeat left top;}#branding2 {  width: 100%;  overflow: hidden;}.news {  background-color:#eaeaea;  border: solid 1px #999;}.news img {  float: left;  padding: 2%;  width: 25%;  max-width: 200px;}.news p {  float: right;  width: 68%;  margin: 0;  padding: 2% 2% 2% 0;}--></style></head><body><div id="wrapper"><h1>Liquid Image Sizing</h1><h2>배경 이미지로 넓은 이미지를 지정하고 <code>height</code>를 배경 이미지의 높이와 같게 지정한 컨테이너의 경우</h2><div id="branding1"></div><h2><code>overflow</code> 속성이 <code>hidden</code>로 지정된 래퍼의 경우</h2><div id="branding2"><img src="images/branding.png" width="1600" height="171" /></div><h2>이미지 태그</h2><div class="news"><img id="pic" src="images/sumanpark.jpg" /><p>화면 표현을 위한 마크업을 만들 필요없이 완벽하게 페이지 레이아웃을 짤 수 있다는 것은 CSS의 가장 큰 장점 중 하나입니다. 하지만 CSS로 레이아웃을 만드는 것이 보통 어려운 일이 아니라고 알려져 있습니다. 특히 처음 접한 사람들이 이런 얘기를 많이 하게 되죠. 이런 얘기가 나오게 되는 이유는 웹 브라우저마다 다른 특성을 보이기 때문이기도 하지만 대부분은 웹 상에서 구할 수 있는 레이아웃 기법이 저마다 다 다른 방식을 취하고 있기 때문입니다. 많은 CSS 개발자들이 자신만의 다단 레이아웃 기법을 새롭게 선보이는데, CSS 입문자들이 이런 기법이 어떻게 동작하는지 정확하게 이해하지 못하고 사용하는데서 원인을 찾을 수도 있겠습니다. 이렇게 CSS 레이아웃 기법에 대해서 블랙박스처럼 사용하게 되면 원하는 결과는 금방 얻을 수 있지만 이 언어를 이해할 수는 없습니다.</p><div class="clear"></div></div></div></body></html>